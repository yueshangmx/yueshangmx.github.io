---
layout: post
title: 13.JavaScrip 原型和面向对象
date: 2017-09-05
description: "JavaScript，原型"
tags: 笔记   
---

### 1.面向对象
在程序中，都是用一个对象来描述现实中一个具体的东西。

现实中的东西：都包含属性：描述一个东西特点的变量，一个值; 功能：东西可以执行的操作。

什么是对象：封装多个数据和方法的存储空间；

什么是自定义对象：封装现实中一个东西的属性和功能的存储空间；现实中东西的属性会成为对象中的属性变量，现实中东西的功能，会成为对象中的方法（函数）。

```
面向对象三大特点：封装 继承 多态
	封装：将描述同一个东西的属性和方法，定义在一个对象中
	继承：父对象中的属性和方法，子对象可直接使用。
	多态：同一个对象，在不同情况下，呈现不同的状态。
		重载：统一方法名，传入参数不同，执行不同的操作。
		重写：子对象觉得父对象的成员不好用，可自己定义一个，覆盖父对象的成员。
```

### 2.创建自定义对象
- (1)对象直接量
```
var obj={"属性名1":值1,
	"属性名2":值2,
	......	
	"方法名",function(){...this.属性名...}
};
```
JS中一切都是对象，所有对象的底层，都是hash数组。

访问对象的属性：`obj.属性名`或者`obj["属性名"]`

<font color=#f00>注意：访问对象中不存在的属性 ==> 访问数组中不存在的下标——不会出错，返回undefined；强行给不存在的属性赋值，不会报错！ js会自动创建同名属性</font>



- (2)new方法
```
var obj=new Object();  //创建一个空对象
obj.属性名=值;
obj.方法名=function(){...this.属性名...}
```
- (3)利用构造函数，反复创建相同结构的对象

构造函数：描述一类对象的结构的特殊函数

定义构造函数
```javascript
function 构造函数名|类型名(属性参数1,……){
　　this.属性名=属性参数1;　　//在当前正在创建的对象中创建一个属性名。并赋值为属性参数1的值
　　......
　　this.方法名=function(){
　　　　...this.属性名...
　　}
}
```
利用构造函数创建对象
```
var obj=new 构造函数名|类型名(属性值1,...)
new：	①创建一个空对象 new obj={}
	②利用空对象调用构造函数;构造函数在空对象中添加属性和方法
	③设置新对象的__proto__指向构造函数的prototype属性
	④返回新对象的地址
```